@using Root.Application.DTOs.PackageDtos
@using Root.Application.DTOs.UserDtos
@using Root.Domain.Enums

<!-- Package Start -->
<div class="container-xxl py-5">
    <div class="container">
        <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
            <h6 class="section-title bg-white text-center text-primary px-3">Pacotes</h6>
            <h1 class="mb-5">Pacotes Disponiveis</h1>
        </div>
        <div class="row g-4 justify-content-center">
            @foreach (var pack in ListPackage)
            {
                <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.5s">
                    <div class="package-item">
                        <div class="overflow-hidden">
                            <img class="img-fluid" src="img/package-3.jpg" alt="">
                        </div>
                        <div class="d-flex border-bottom">
                            <small class="flex-fill text-center border-end py-2"><i class="bi bi-hourglass-bottom text-primary me-2"></i>9h</small>
                            <small class="flex-fill text-center py-2"><i class="bi bi-pin-angle-fill text-primary me-2"></i>@pack.ActivityNames.Count Atividade(s)</small>
                        </div>
                        <div class="text-center p-4">
                            <h3 class="mb-1">@pack.Name</h3>
                            <p>@pack.Description</p>
                            @if (IsClient)
                            {
                                <div class="d-flex justify-content-center mb-2">
                                    <a class="btn btn-sm btn-primary px-3 border-end"
                                       @onclick='() => {  carts.AddItem(CurrentUser!.UserTypeId, pack.Id); }'
                                       style="border-radius: 30px 0 0 30px;">
                                        <i class="bi bi-cart-fill"></i>
                                    </a>
                                    <a class="btn btn-sm btn-primary px-3 border-end"
                                       @onclick='async () => { await JS.InvokeVoidAsync("openModal", $"viewPackModal_{pack.Id}"); }'
                                       style="border-radius: 0 0 0 0;">
                                        Ver mais
                                    </a>
                                    <a class="btn btn-sm btn-primary px-3"
                                       @onclick='async () => { await JS.InvokeVoidAsync("openModal", $"bookPackModal_{pack.Id}"); }' style="border-radius: 0 30px 30px 0;">
                                        Agendar Agora
                                    </a>
                                </div>
                                <ReserveModal Package="pack"></ReserveModal>
                                <ViewPackageModal Package="pack"></ViewPackageModal>
                            }
                            else
                            {
                                <div class="d-flex justify-content-center mb-2">
                                    <a class="btn btn-sm btn-primary px-3 border"
                                       @onclick='async () => { await JS.InvokeVoidAsync("openModal", $"viewPackModal_{pack.Id}"); }'
                                       style="border-radius: 30px 30px 30px 30px;">
                                        Ver mais
                                    </a>
                                </div>
                                <ViewPackageModal Package="pack"></ViewPackageModal>
                            }
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
    @if (IsClient)
    {
        <div class="d-flex justify-content-center wow fadeInUp" data-wow-delay="0.5s">
            <a class="btn btn-primary py-3 px-5 mt-2"
               @onclick='async () => { await JS.InvokeVoidAsync("openModal", "customPackModal"); }'>
                Personalizar Pacote
            </a>
        </div>
    }
</div>
<!-- Package End -->

<CustomPackageModal></CustomPackageModal>

@code
{
    [CascadingParameter] public LoginListUserDto? CurrentUser { get; set; }
    public List<ListPackageDto> ListPackage { get; set; } = [];

    public bool IsClient => CurrentUser is not null && CurrentUser.User.Type == UserType.Client;

    protected override async Task OnInitializedAsync()
    {
        ListPackage = await packages.GetAllPackagesAsync();
        StateHasChanged();
    }
}