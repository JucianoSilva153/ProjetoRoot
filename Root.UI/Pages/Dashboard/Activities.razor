@layout DashboardLayout
@page "/dashboard/activities"
@using Root.Application.DTOs.ActivityDto
<div class="d-flex w-100 flex-row align-content-between">
    <div class="w-75">
        <h3>Atividades</h3>
        <small>Gestao de atividades inclusas nos pacotes.</small>
    </div>
    <div class="d-flex justify-content-end align-items-center w-25">
        <button class="btn btn-primary rounded-pill" @onclick='() => { JS.InvokeVoidAsync("openModal", "newActivityModal"); }'>
            <i class="bi bi-plus-circle"></i>
            <span>Nova Atividade</span>
        </button>
    </div>
</div>
<NewActivityModal OnActivityCreated="async () => { await OnInitializedAsync();}"></NewActivityModal>

<div class="row g-4 mt-4">
    @foreach (var act in ListActivity)
    {
        <div class="col-lg-3 col-sm-6 d-flex">
            <div class="service-item border-primary border-top border-4 rounded pt-3 d-flex flex-column w-100">
                <div class="p-2 d-flex flex-column flex-grow-1" >
                    <h5>@act.Name</h5>
                    <small class="flex-grow-1">@act.Description</small>
                    <div class="d-flex flex-row gap-3 pt-2 mt-auto">
                        <span class="badge bg-primary rounded-pill px-3">
                            <i class="bi bi-clock-fill me-2 text-white"></i>@($"{act.DurationTime}h")
                        </span>
                        <span class="badge bg-primary rounded-pill px-3">
                            <i class="bi bi-cash me-2 text-white"></i>@act.Price.ToString("C")
                        </span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@code {
    public List<ListActivityDto> ListActivity { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        ListActivity = await activities.GetAllActivitiesAsync();
        StateHasChanged();
    }

}