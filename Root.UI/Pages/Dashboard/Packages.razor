@layout DashboardLayout
@page "/dashboard/packages"
@using Root.Application.DTOs.PackageDtos
@using Root.Application.DTOs.UserDtos
@using Root.Domain.Enums

<div class="d-flex w-100 flex-row align-content-between">
    <div class="w-75">
        @if (CurrentUser.User.Type == UserType.Client)
        {
            <h3>Meus Pacotes</h3>
            <small>Veja Todos os Pacotes que Personalizou</small>
        }
        else
        {
            <h3>Pacotes</h3>
            <small>Gestao de Pacotes</small>
        }
    </div>
        @if (CurrentUser.User.Type != UserType.Client)
        {
            <div class="d-flex justify-content-end align-items-center w-25">
                <button class="btn btn-primary rounded-pill"
                        @onclick='() => { JS.InvokeVoidAsync("openModal", "newPackageModal"); }'>
                    <i class="bi bi-plus-circle"></i>
                    <span>Novo Pacote</span>
                </button>
            </div>
        }
</div>

<NewPackageModal OnPackageCreated="async () => { await OnInitializedAsync(); }"></NewPackageModal>

<div class="row g-4 mt-4 justify-content-center">
    @foreach (var pack in ListPackage)
    {
        @if (CurrentUser.User.Type == UserType.Client)
        {
            <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.5s">
                <div class="package-item">
                    <div class="overflow-hidden">
                        <img class="img-fluid" src="img/package-3.jpg" alt="">
                    </div>
                    <div class="d-flex border-bottom">
                        <small class="flex-fill text-center border-end py-2"><i
                                                                                 class="bi bi-hourglass-bottom text-primary me-2"></i><span>@pack.Duration</span>h</small>
                        <small class="flex-fill text-center py-2"><i
                                                                      class="bi bi-pin-angle-fill text-primary me-2"></i>@pack.ActivityNames.Count Atividades</small>
                    </div>
                    <div class="text-center p-4">
                        <h3 class="mb-1">@pack.Name</h3>
                        <p>@pack.Description</p>
                        <div class="d-flex justify-content-center mb-2">
                            <a class="btn btn-sm btn-primary px-3 border-end"
                               @onclick='() => { carts.AddItem(CurrentUser!.UserTypeId, pack.Id); StateHasChanged(); }'
                               style="border-radius: 30px 0 0 30px;">
                                <i class="bi bi-cart-fill"></i>
                            </a>
                            <a class="btn btn-sm btn-primary px-3 border-end"
                               @onclick='async () => { await JS.InvokeVoidAsync("openModal", $"viewPackModal_{pack.Id}"); }'
                               style="border-radius: 0 0 0 0;">
                                Ver mais
                            </a>
                            <a class="btn btn-sm btn-primary px-3"
                               @onclick='async () => { await JS.InvokeVoidAsync("openModal", $"bookPackModal_{pack.Id}"); }'
                               style="border-radius: 0 30px 30px 0;">
                                Agendar Agora
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <ReserveModal Package="pack"></ReserveModal>
            <ViewPackageModal Package="pack"></ViewPackageModal>
        }
        else
        {
            <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.5s">
                <div class="package-item">
                    <div class="overflow-hidden">
                        <img class="img-fluid" src="img/package-3.jpg" alt="">
                    </div>
                    <div class="d-flex border-bottom">
                        <small class="flex-fill text-center border-end py-2"><i
                                class="bi bi-hourglass-bottom text-primary me-2"></i><span>@pack.Duration</span>h</small>
                        <small class="flex-fill text-center py-2"><i
                                class="bi bi-pin-angle-fill text-primary me-2"></i>@pack.ActivityNames.Count Atividades</small>
                    </div>
                    <div class="text-center p-4">
                        <h3 class="mb-1">@pack.Name</h3>
                        <p>@pack.Description</p>
                        <div class="d-flex justify-content-center mb-2">
                            <a @onclick='() => { JS.InvokeVoidAsync("openModal", $"editPackageModal_{pack.Id}");}'
                               class="btn btn-sm btn-primary px-3 border-end"
                               style="border-radius: 30px 0 0 30px;">Editar</a>
                            <a href="#" class="btn btn-sm btn-outline-danger px-3"
                               style="border-radius: 0 30px 30px 0;">Remover</a>
                        </div>
                    </div>
                </div>
            </div>
            <EditPackageModal Package="pack"
                              OnPackageUpdated="async () => {await OnInitializedAsync();}"></EditPackageModal>
        }
    }
    @if (ListPackage.Count == 0)
    {
        <div class="d-flex w-100 justify-content-center">
            <small>Sem Pacotes</small>
        </div>
    }
</div>

@code {

    [CascadingParameter] public LoginListUserDto CurrentUser { get; set; } = new();
    public List<ListPackageDto> ListPackage { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        ListPackage = await packages.GetAllPackagesAsync();
        ListPackage = ListPackage.Where(l => l.Type == PackageType.Fixed).ToList();
        Console.WriteLine(ListPackage.Count + " packs encontrados!!");
        if (CurrentUser.User.Type == UserType.Client)
            ListPackage = ListPackage.Where(l => l.Type == PackageType.Custom && l.CustomPackageOwnerId == CurrentUser.User.Id).ToList();
        StateHasChanged();
    }

}