@layout DashboardLayout
@page "/dashboard/users"
@using Root.Application.DTOs.AdminDtos

<div class="d-flex w-100 flex-row align-content-between">
    <div class="w-75">
        <h3>Administradores</h3>
        <small>Veja Todos os Administradores existentes no sistema</small>
    </div>
    <div class="d-flex justify-content-end align-items-center w-25">
        <button class="btn btn-primary rounded-pill"
                @onclick='() => { JS.InvokeVoidAsync("openModal", "newAdminModal"); }'>
            <i class="bi bi-plus-circle"></i>
            <span>Novo Administrador</span>
        </button>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
    <tr>
        <th scope="col">Nome</th>
        <th scope="col">Sobrenome</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var client in ListAdmin)
    {
        <tr>
            <td>@client.Name</td>
            <td>@client.Surname</td>
        </tr>
    }
    </tbody>
</table>

<NewAdminModal OnAdminCreated="async () => await OnInitializedAsync()"></NewAdminModal>

@code {
    public List<ListAdminDto> ListAdmin { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        ListAdmin = await admins.GetAllAdminsAsync();
        StateHasChanged();
    }
}