@using System.Text.Json
@using Root.Application.DTOs.UserDtos
@using Root.Domain.Enums
@inherits LayoutComponentBase


<!-- Sidebar -->
<div class="sidebar d-flex flex-column vh-100">
    <!-- Logo no topo -->
    <a href="/">
        <div class="text-center ">
            <h1 class="text-primary p-4">
                <strong>R&R</strong>
            </h1>
        </div>
    </a>

    <!-- Navegação com scroll vertical -->
    <div style="flex: 1 1 auto; overflow-y: auto; overflow-x: hidden; scrollbar-width: none; -ms-overflow-style: none;">
        <nav class="nav flex-column px-2">
            @if (CurrentUser.User.Type == UserType.Administrator)
            {
                <NavLink class="nav-link" href="dashboard"><i class="bi bi-grid-fill me-2"></i>Dashboard</NavLink>
                <NavLink class="nav-link" href="dashboard/packages"><i class="bi bi-table me-2"></i>Pacotes</NavLink>
                <NavLink class="nav-link" href="dashboard/guides"><i class="bi bi-person-badge-fill me-2"></i>Guias</NavLink>
                <NavLink class="nav-link" href="dashboard/posts"><i class="bi bi-card-text me-2"></i>Postagens</NavLink>
                <NavLink class="nav-link" href="dashboard/activities"><i class="bi bi-card-text me-2"></i>Atividades</NavLink>
                <NavLink class="nav-link" href="dashboard/orders"><i class="bi bi-list me-2"></i>Pedidos</NavLink>
                <NavLink class="nav-link" href="dashboard/users"><i class="bi bi-people-fill me-2"></i>Usuários</NavLink>
                <NavLink class="nav-link" href="dashboard/clients"><i class="bi bi-person-lines-fill me-2"></i>Clientes</NavLink>
            }
            else if (CurrentUser.User.Type == UserType.Guide)
            {
                <NavLink class="nav-link" href="dashboard"><i class="bi bi-grid-fill me-2"></i>Dashboard</NavLink>
                <NavLink class="nav-link" href="dashboard/reserves"><i class="bi bi-table me-2"></i>Reservas</NavLink>
            }
            else if (CurrentUser.User.Type == UserType.Client)
            {
                <NavLink class="nav-link" href="dashboard"><i class="bi bi-grid-fill me-2"></i>Dashboard</NavLink>
                <NavLink class="nav-link" href="dashboard/reserves"><i class="bi bi-table me-2"></i>Reservas</NavLink>
                <NavLink class="nav-link" href="dashboard/payments"><i class="bi bi-person-badge-fill me-2"></i>Pagamentos</NavLink>
            }
            <!-- Adicione mais itens aqui -->
        </nav>
    </div>

    <!-- Rodapé sempre fixo -->
    <div class="p-3 border-top">
        <div class="d-flex align-items-center">
            <a href="/dashboard/account">
                <div>
                    <div class="fw-bold">@CurrentUser.User.UserName</div>
                    <small>@CurrentUser.User.Type.ToFriendlyString()</small>
                </div>
            </a>
        </div>
        <a href="#" class="nav-link text-danger mt-2 ps-0"
           @onclick='async () => { await LocalStorage.RemoveItemAsync("currentUser"); }'>
            <i class="bi bi-box-arrow-right me-2"></i>Terminar Sessão
        </a>
    </div>
</div>


<!-- Header -->
<div class="header">
    <div>
    </div>
    <div class="d-flex align-items-center gap-3">
        @if (CurrentUser.User.Type == UserType.Client)
        {
            <a @onclick='() => { JS.InvokeVoidAsync("openModal", "cartModal"); }' class="d-flex  text-lg-center justify-content-center align-items-center rounded-pill">
                <i class="bi bi-cart-fill" style="font-size: 30px"></i>
            </a>
        }
    </div>
</div>

<div class="content">
    @Body
</div>

@if (CurrentUser.UserTypeId != Guid.Empty && CurrentUser.User.Type == UserType.Client)
{
    <CartModal ClientId="CurrentUser.UserTypeId"></CartModal>
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>


@code
{
    public LoginListUserDto CurrentUser { get; set; } = new LoginListUserDto { User = new ListUserDto(), Token = "" };

    protected override async Task OnInitializedAsync()
    {
        var currentUser = await LocalStorage.GetItemAsync("currentUser");
        if (currentUser is null)
        {
            Navigator.NavigateTo("/login");
            return;
        }

        CurrentUser = JsonSerializer.Deserialize<LoginListUserDto>(currentUser) ?? new LoginListUserDto();
        if (!(await users.IsUserLoggedIn()))
        {
            Navigator.NavigateTo("/login");
            await LocalStorage.RemoveItemAsync("currentUser");
            Console.WriteLine("Usuario nao esta Autentiado!!");
            return;
        }

        Console.WriteLine("Usuario Autentiado!!");
    }
}